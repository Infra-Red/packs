#!/bin/bash

set -eo pipefail

cd $(dirname "${BASH_SOURCE[0]}")/..

stack=$1
lifecycle_ref=$2
samples_tgz=https://api.github.com/repos/buildpack/samples/tarball/master
buildpacks_dir=$(pwd)/images/detect/buildpacks

if [[ -z $stack ]]; then
  >&2 echo "Stack not specified."
  exit 1
fi

rm -rf "$buildpacks_dir"
mkdir -p "$buildpacks_dir"

if tar --version | grep -q "GNU tar"; then
  curl -sSL "$samples_tgz" | tar -xzf - -C "$buildpacks_dir" --strip-components=1 --wildcards "buildpack-samples-*"
else
  curl -sSL "$samples_tgz" | tar -xzf - -C "$buildpacks_dir" --strip-components=1 "buildpack-samples-*"
fi

cat << TOML > "$buildpacks_dir/order.toml"
[[groups]]
  build-image = "packs/v3:build"
  run-image = "packs/v3:run"
TOML

for buildpack in "nodejs" "java"; do
  echo "--> Adding buildpack: ${buildpack}"
  bp_dir=${buildpacks_dir}/sh.packs.samples.buildpack.${buildpack}
  mkdir -p ${bp_dir}

  latest_dir=${bp_dir}/latest
  mv ${buildpacks_dir}/${buildpack}-buildpack ${latest_dir}

  version_dir=$(dirname "$latest_dir")/$(cat "$latest_dir/buildpack.toml" | yj -t | jq -r .version)
  mv "$latest_dir" "$version_dir"
  ln -s "$(basename "$version_dir")" "$latest_dir"

cat << TOML >> "$buildpacks_dir/order.toml"
  [[groups.buildpacks]]
    id = "sh.packs.samples.buildpack.${buildpack}"
    version = "latest"
    optional = true
TOML
done

docker pull "${stack}"

base_args="--build-arg stack=${stack} ${lifecycle_ref:+--build-arg lifecycle_ref=${lifecycle_ref}}"
docker build $base_args -t packs/v3:latest -f images/base.Dockerfile .
docker build -t packs/v3:detect images/detect
docker build -t packs/v3:analyze images/analyze
docker build -t packs/v3:build images/build
docker build -t packs/v3:export images/export
docker build -t packs/v3:run images/run

